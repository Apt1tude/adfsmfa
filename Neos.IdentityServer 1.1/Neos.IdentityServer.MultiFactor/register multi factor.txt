//******************************************************************************************************************************************************************************************//
// Copyright (c) 2015 Neos-Sdi (http://www.neos-sdi.com)                                                                                                                                    //                        
//                                                                                                                                                                                          //
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),                                       //
// to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,   //
// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:                                                                                   //
//                                                                                                                                                                                          //
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.                                                           //
//                                                                                                                                                                                          //
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                                      //
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,                            //
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               //
//                                                                                                                                                                                          //
//******************************************************************************************************************************************************************************************//

Set-location "C:\Temp\MFA"

[System.Reflection.Assembly]::Load("System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")
$publish = New-Object System.EnterpriseServices.Internal.Publish

net stop adfssrv
$publish.GacRemove("C:\Temp\MFA\Neos.IdentityServer.MultiFactor.dll")
$publish.GacRemove("C:\Temp\MFA\Neos.IdentityServer.MultiFactor.Resources.dll")
$publish.GacRemove("C:\Temp\MFA\Neos.IdentityServer.MultiFactor.Common.dll")
$publish.GacRemove("C:\Temp\MFA\Neos.IdentityServer.MultiFactor.Common.Resources.dll")
$publish.GacRemove("C:\Temp\MFA\Neos.IdentityServer.MultiFactor.QREncoding.dll")

$publish.GacInstall("C:\Temp\MFA\Neos.IdentityServer.MultiFactor.dll")
$publish.GacInstall("C:\Temp\MFA\Neos.IdentityServer.MultiFactor.Resources.dll")
$publish.GacInstall("C:\Temp\MFA\Neos.IdentityServer.MultiFactor.Common.dll")
$publish.GacInstall("C:\Temp\MFA\Neos.IdentityServer.MultiFactor.QREncoding.dll")
net start adfssrv

# Unregister ADFS Authentication Provider 
net start adfssrv
UnRegister-AdfsAuthenticationProvider -Name "MultifactorAuthenticationProvider" 
net stop adfssrv
net start adfssrv

# Register ADFS Authentication Provider 
$typeName = "Neos.IdentityServer.MultiFactor.AuthenticationProvider, Neos.IdentityServer.MultiFactor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=175aa5ee756d2aa2"
Register-AdfsAuthenticationProvider -TypeName $typeName -Name "MultiFactorAuthenticationProvider" -Verbose -ConfigurationFilePath ".\configdata.xml"
net stop adfssrv
net start adfssrv

# Chnage ADFS Authentication Provider Configuration Data
Import-AdfsAuthenticationProviderConfigurationData -Name "MultiFactorAuthenticationProvider" -FilePath ".\configdata.xml" 
net stop adfssrv
net start adfssrv

# Add Additional Authentication Rules for OAuth or Application like Outllok, Web Services etc...
Get-AdfsAdditionalAuthenticationRule
$rp = Get-AdfsRelyingPartyTrust –Name "Microsoft Office 365 Identity Platform"   # your RelyingParty
$MfaClaimRule = 'c:[Type == "http://schemas.microsoft.com/ws/2012/01/insidecorporatenetwork", Value == "false"] && d:[Type == "http://schemas.microsoft.com/2012/01/requestcontext/claims/x-ms-endpoint-absolute-path", Value =~ "(/adfs/ls)|(/adfs/oauth2)"] => issue(Type = "http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod", Value = "http://schemas.microsoft.com/claims/multipleauthn");'
Set-AdfsRelyingPartyTrust –TargetRelyingParty $rp –AdditionalAuthenticationRules $MfaClaimRule


Set-AdfsAdditionalAuthenticationRule –TargetRelyingParty $rp -AdditionalAuthenticationRules 'c:[Type == "http://schemas.microsoft.com/2012/01/requestcontext/claims/x-ms-endpoint-absolute-path", Value =~ "(/adfs/ls)|(/adfs/oauth2)"] => issue(Type = "http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod", Value = "http://schemas.microsoft.com/claims/multipleauthn");' 
Set-AdfsAdditionalAuthenticationRule -AdditionalAuthenticationRules 'c:[Type == "http://schemas.microsoft.com/2012/01/requestcontext/claims/x-ms-endpoint-absolute-path", Value =~ "(/adfs/ls)|(/adfs/oauth2)"] => issue(Type = "http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod", Value = "http://schemas.microsoft.com/claims/multipleauthn");' 
Set-AdfsAdditionalAuthenticationRule -AdditionalAuthenticationRules $null


c:[Type == "http://schemas.microsoft.com/ws/2012/01/insidecorporatenetwork", Value == "false"] && 
c:[Type == "http://schemas.microsoft.com/2012/01/requestcontext/claims/x-ms-endpoint-absolute-path", Value =~ "(/adfs/ls)|(/adfs/oauth2)"] 
=> issue(Type = "http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod", Value = "http://schemas.microsoft.com/claims/multipleauthn"); 

 => issue(Type = "http://schemas.microsoft.com/authorization/claims/permit", Value = "true");


$g = Get-AdfsGlobalAuthenticationPolicy 